{"version":3,"sources":["assets/images/corona-case-map.png","pages/Symptoms/components/Cards/cards.module.scss","pages/Symptoms/1.png","pages/Symptoms/2.png","pages/Symptoms/3.png","pages/Symptoms/4.png","pages/Symptoms/5.png","pages/Symptoms/6.png","pages/Prevention/components/Cards/cards.module.scss","serviceWorker.js","components/Logo/index.js","components/Navbar/index.js","components/Footer/index.js","components/NotFound/index.js","components/Cards/index.js","components/Card/index.js","utils/api.js","pages/World/components/Chart/index.js","pages/World/index.js","constants.js","hooks/useSortableData.js","components/Table/index.js","pages/Countries/components/Chart/index.js","components/Country/index.js","containers/CountryContainer.js","pages/Countries/index.js","pages/Symptoms/components/Cards/index.js","pages/Symptoms/components/Card/index.js","pages/Symptoms/index.js","lotties/WashYourHandsLottie/index.js","lotties/WearFaceMaskLottie/index.js","lotties/AvoidCloseContactLottie/index.js","pages/Prevention/components/Cards/index.js","pages/Prevention/components/Card/index.js","lotties/StayAtHomeLottie/index.js","lotties/UseSoapOrSanitizerLottie/index.js","lotties/KeepInformDoctorsLottie/index.js","pages/Prevention/index.js","App.js","components/ErrorBoundary/index.js","index.js","pages/World/world.module.scss","pages/Symptoms/components/Card/card.module.scss","pages/Prevention/components/Card/card.module.scss","components/Country/country.module.scss","pages/Symptoms/symptoms.module.scss","pages/Prevention/prevention.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","Logo","href","className","src","alt","nav","label","to","exact","Navbar","map","key","linkStyles","color","Footer","target","rel","style","NotFound","Cards","children","StatCard","title","value","classNames","toLocaleString","baseUrl","axios","create","baseURL","Chart","useFetch","loading","data","error","Pane","display","alignItems","justifyContent","height","Spinner","Alert","intent","dataLine","labels","reportDate","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","confirmed","total","deaths","recovered","s","chart","World","world","heading","updated","format","Date","formatDistanceToNow","cases","active","todayCases","todayDeaths","critical","affectedCountries","cover","order","useSortableData","items","config","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","direction","requestSort","tableHeadColumn","AdvancedTable","countries","searchQuery","setSearchQuery","searchQueryTrim","trim","length","filter","country","toLowerCase","includes","getIconForOrder","currentOrder","getClassNamesFor","name","undefined","Table","border","Head","SearchHeaderCell","onChange","placeholder","column","TextHeaderCell","TextDropdownButton","icon","onClick","VirtualBody","countryInfo","tests","population","Row","isSelectable","onSelect","alert","Cell","Avatar","flag","Text","marginLeft","size","fontWeight","TextCell","isNumber","url","Confirmed","Deaths","Recovered","Country","todayRecovered","countryName","CountryContainer","currentCountryName","country_name","Countries","classes","cards","Card","image","description","card","symptoms","id","one","two","three","four","five","six","Symptoms","symptom","WashYourHandsLottie","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","width","WearFaceMaskLottie","AvoidCloseContactLottie","lottie","StayAtHomeLottie","UseSoapOrSanitizerLottie","KeepInformDoctorsLottie","figures","Prevention","App","path","default","ErrorBoundary","props","state","hasError","errorInfo","console","log","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,6C,0CCC3CD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCD1BD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,g/jJCC3CD,EAAOC,QAAU,CAAC,MAAQ,uB,6gqjBCWNC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2BCJSC,MAVf,WAEI,OACI,uBAAGC,KAAK,IAAIC,UAAU,QAClB,yBAAKC,IAAI,cAAcC,IAAI,SAD/B,mBCAFC,G,OAAM,CACR,CAAEC,MAAO,QAASC,GAAI,IAAKC,OAAO,GAClC,CAAEF,MAAO,YAAaC,GAAI,aAAcC,OAAO,GAC/C,CAAEF,MAAO,WAAYC,GAAI,YAAaC,OAAO,GAC7C,CAAEF,MAAO,aAAcC,GAAI,cAAeC,OAAO,KAqBtCC,MAlBf,WAEI,OACI,yBAAKP,UAAU,UACX,yBAAKA,UAAU,+DACX,kBAAC,EAAD,MACA,wBAAIA,UAAU,OACTG,EAAIK,KAAI,gBAAGJ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,MAAd,OACL,wBAAIN,UAAU,WAAWS,IAAKL,GAC1B,kBAAC,IAAD,CAASJ,UAAU,WAAWK,GAAIA,EAAIC,MAAOA,GAAQF,WCnB3EM,G,OAAa,CACfC,MAAO,SAkBIC,MAff,WAEI,OACI,4BAAQZ,UAAU,UACd,yBAAKA,UAAU,aAAf,uBAC0B,uBAAGD,KAAK,sCAAsCc,OAAO,SAClDC,IAAI,sBAAsBC,MAAOL,GADpC,oBAD1B,6CAIe,uBAAGX,KAAK,sBAAsBc,OAAO,SAASC,IAAI,sBAAsBC,MAAOL,GAA/E,sB,OCHZM,MATf,WAEI,OACI,yBAAKhB,UAAU,aACX,0C,2DCKGiB,MATf,YAA8B,IAAbC,EAAY,EAAZA,SAEb,OACI,yBAAKlB,UAAU,SACVkB,I,wBCOEC,MAVf,YAAgD,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOrB,EAAa,EAAbA,UAE9B,OACI,yBAAKA,UAAWsB,IAAW,OAAQtB,IAC/B,wBAAIA,UAAU,cAAcoB,GAC5B,wBAAIpB,UAAU,cAAd,OAA4BqB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAOE,oB,kBCHlCC,EAAU,wB,GAEJ,UAAMA,EAAN,iBACM,UAAMA,EAAN,uBAEVC,IAAMC,OAAO,CAAEC,QAAS,0B,4DC4FxBC,MAjGf,WACI,IADa,EAEoBC,YADrB,uCACmC,IAAvCC,EAFK,EAELA,QAASC,EAFJ,EAEIA,KAAMC,EAFV,EAEUA,MAEvB,GAAIF,EACA,OACI,kBAACG,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAQ,KAER,kBAACC,EAAA,EAAD,OAKZ,GAAIN,EACA,OAAO,kBAACO,EAAA,EAAD,CAAOC,OAAO,SAASpB,MAAOY,IAGzC,IAAMS,EAAW,CACbC,OAAM,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAMvB,KAAI,qBAAGmC,cACrBC,SAAU,CACN,CACIxC,MAAO,YACPyC,MAAM,EACNC,YAAa,GACbC,gBAAiB,0BACjBC,YAAa,wBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMvB,KAAI,qBAAGsD,UAA0BC,UAEjD,CACI3D,MAAO,SACPyC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,uBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMvB,KAAI,qBAAGwD,OAAoBD,UAE3C,CACI3D,MAAO,YACPyC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,uBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMvB,KAAI,qBAAGyD,UAA0BF,YAKzD,OACI,yBAAK/D,UAAWkE,IAAEC,OACd,kBAAC,IAAD,CAAMpC,KAAMU,MC9BT2B,MAvDf,WAAkB,IAAD,EAEoBvC,YAAS,GAAD,OAAIL,EAAJ,iBAA4B,IAA7DM,EAFK,EAELA,QAASC,EAFJ,EAEIA,KAAMC,EAFV,EAEUA,MAEvB,OAAIF,EAEI,kBAACG,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAQ,KAER,kBAACC,EAAA,EAAD,OAKRN,EACO,kBAACO,EAAA,EAAD,CAAOC,OAAO,SAASpB,MAAOY,IAIrC,6BAAShC,UAAWkE,IAAEG,OAClB,yBAAKrE,UAAU,aACX,4BAAQA,UAAWkE,IAAEI,SACjB,wBAAItE,UAAWkE,IAAE9C,OAAjB,UACK,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMwC,UACH,4CACiB,IACb,8BAAOC,YAAO,IAAIC,KAAJ,OAAS1C,QAAT,IAASA,OAAT,EAASA,EAAMwC,SAAU,wBAA+B,IACtE,kCAAQG,YAAoB,IAAID,KAAJ,OAAS1C,QAAT,IAASA,OAAT,EAASA,EAAMwC,UAA3C,OAIZ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAMnD,MAAM,QAAQC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAM4C,QACjC,kBAAC,EAAD,CAAMvD,MAAM,SAASC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMiC,SAClC,kBAAC,EAAD,CAAM5C,MAAM,YAAYC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMkC,YACrC,kBAAC,EAAD,CAAM7C,MAAM,SAASC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAM6C,SAElC,kBAAC,EAAD,CAAMxD,MAAM,cAAcC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAM8C,aACvC,kBAAC,EAAD,CAAMzD,MAAM,eAAeC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAM+C,cACxC,kBAAC,EAAD,CAAM1D,MAAM,WAAWC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMgD,WACpC,kBAAC,EAAD,CAAM3D,MAAM,qBAAqBC,MAAK,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMiD,qBAElD,yBAAKhF,UAAWkE,IAAEe,OACd,yBAAKhF,IAAKO,IAAKN,IAAI,SAEvB,kBAAC,EAAD,MACA,yBAAKa,MAAO,CAAEsB,OAAQ,c,qDC9DzB6C,EAAe,YAAfA,EAAkC,aCqChCC,MAlCf,SAAyBC,GAAuB,IAAhBC,EAAe,uDAAN,KAAM,EACPC,mBAASD,GADF,mBACpCE,EADoC,KACxBC,EADwB,KAGrCC,EAAcC,mBAAQ,WACxB,IAAIC,EAAa,YAAOP,GAYxB,OAXmB,OAAfG,GACAI,EAAcC,MAAK,SAACC,EAAGC,GACnB,OAAID,EAAEN,EAAW9E,KAAOqF,EAAEP,EAAW9E,KAC1B8E,EAAWQ,YAAcb,GAAa,EAAI,EAEjDW,EAAEN,EAAW9E,KAAOqF,EAAEP,EAAW9E,KAC1B8E,EAAWQ,YAAcb,EAAY,GAAK,EAE9C,KAGRS,IACR,CAACP,EAAOG,IAELS,EAAc,SAACvF,GACjB,IAAIsF,EAAYb,EAEZK,GACAA,EAAW9E,MAAQA,GACnB8E,EAAWQ,YAAcb,IAEzBa,EAAYb,GAEhBM,EAAc,CAAE/E,MAAKsF,eAGzB,MAAO,CAAEX,MAAOK,EAAaO,cAAaT,eC7BxCU,EAAkB,CAAC,QAAS,SAAU,YAAa,SAAU,QAAS,cA2E7DC,MAzEf,YAAuC,IAAdC,EAAa,EAAbA,UAAa,EACIb,mBAAS,IADb,mBAC3Bc,EAD2B,KACdC,EADc,OAYSlB,EAT5B,SAACgB,GACZ,IAAMG,EAAkBF,EAAYG,OAEpC,OAA+B,IAA3BD,EAAgBE,OAAqBL,EAElCA,EAAUM,QAAO,qBAAGC,QACfC,cAAcC,SAASN,EAAgBK,kBAGIF,CAAON,IAA1Df,EAZ0B,EAY1BA,MAAOY,EAZmB,EAYnBA,YAAaT,EAZM,EAYNA,WAEtBsB,EAAkB,SAACC,GACrB,OAAQA,GACJ,KAAK5B,EACD,MAAO,WACX,KAAKA,EACD,MAAO,aACX,QACI,MAAO,0BAMb6B,EAAmB,SAACC,GACtB,GAAKzB,EAGL,OAAOA,EAAW9E,MAAQuG,EAAOzB,EAAWQ,eAAYkB,GAG5D,OACI,kBAACC,EAAA,EAAD,CAAOC,QAAM,GACT,kBAACD,EAAA,EAAME,KAAP,CAAY/E,OAAQ,IAChB,kBAAC6E,EAAA,EAAMG,iBAAP,CACIhG,MAAO+E,EACPkB,SAdW,SAACjG,GAAD,OAAWgF,EAAehF,IAerCkG,YAAY,yBAEftB,EAAgBzF,KAAI,SAACgH,GAAD,OACjB,kBAACN,EAAA,EAAMO,eAAP,CAAsBhH,IAAK+G,GACvB,kBAACE,EAAA,EAAD,CACIC,KAAMd,EAAgBE,EAAiBS,EAAOb,gBAC9CiB,QAAS,kBAAM5B,EAAYwB,EAAOb,iBAEjCa,QAKjB,kBAACN,EAAA,EAAMW,YAAP,CAAmBxF,OAAQ,KACtB+C,EAAM5E,KAAI,gBAAGkG,EAAH,EAAGA,QAASoB,EAAZ,EAAYA,YAAanD,EAAzB,EAAyBA,MAAOX,EAAhC,EAAgCA,OAAQC,EAAxC,EAAwCA,UAAWW,EAAnD,EAAmDA,OAAQmD,EAA3D,EAA2DA,MAAOC,EAAlE,EAAkEA,WAAlE,OACP,kBAACd,EAAA,EAAMe,IAAP,CAAWxH,IAAKiG,EAASwB,cAAY,EAACC,SAAU,kBAAMC,MAAM1B,KACxD,kBAACQ,EAAA,EAAMmB,KAAP,CAAYnG,QAAQ,OAAOC,WAAW,UAClC,kBAACmG,EAAA,EAAD,CAAQrI,IAAK6H,EAAYS,KAAMvB,KAAMN,IACrC,kBAAC8B,EAAA,EAAD,CAAMC,WAAY,EAAGC,KAAM,IAAKC,WAAY,KAAMjC,IAEtD,kBAACQ,EAAA,EAAM0B,SAAP,CAAgBC,UAAQ,GAAxB,OAA0BlE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOpD,kBACjC,kBAAC2F,EAAA,EAAM0B,SAAP,CAAgBC,UAAQ,GAAxB,OAA0B7E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQzC,kBAClC,kBAAC2F,EAAA,EAAM0B,SAAP,CAAgBC,UAAQ,GAAxB,OAA0B5E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAW1C,kBACrC,kBAAC2F,EAAA,EAAM0B,SAAP,CAAgBC,UAAQ,GAAxB,OAA0BjE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQrD,kBAClC,kBAAC2F,EAAA,EAAM0B,SAAP,CAAgBC,UAAQ,GAAxB,OAA0Bd,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOxG,kBACjC,kBAAC2F,EAAA,EAAM0B,SAAP,CAAgBC,UAAQ,GAAxB,OAA0Bb,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAYzG,yBC8B/CK,MAjGf,YAA6B,IAAZ8E,EAAW,EAAXA,QAEPoC,EAAG,6CAAyCpC,GAF1B,EAIS7E,YAASiH,EAAK,IAAvChH,EAJgB,EAIhBA,QAASC,EAJO,EAIPA,KAAMC,EAJC,EAIDA,MAEvB,GAAIF,EACA,OACI,kBAACG,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAQ,KAER,kBAACC,EAAA,EAAD,OAKZ,GAAIN,EACA,OAAO,kBAACO,EAAA,EAAD,CAAOC,OAAO,SAASpB,MAAOY,IAGzC,IAAMS,EAAW,CACbC,OAAQX,EAAKvB,KAAI,gBAASuB,EAAT,EAAG0C,KAAH,OAAoBD,YAAO,IAAIC,KAAK1C,GAAO,iBAC5Da,SAAU,CACN,CACIxC,MAAO,YACPyC,MAAM,EACNC,YAAa,GACbC,gBAAiB,0BACjBC,YAAa,wBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAMA,EAAKvB,KAAI,qBAAGuI,cAEtB,CACI3I,MAAO,SACPyC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,uBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAMA,EAAKvB,KAAI,qBAAGwI,WAEtB,CACI5I,MAAO,YACPyC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,uBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB9B,KAAMA,EAAKvB,KAAI,qBAAGyI,gBAK9B,OACI,kBAAC,IAAD,CAAMlH,KAAMU,K,iBCnDLyG,MAvCf,YAGI,IAFAxC,EAED,EAFCA,QAASsB,EAEV,EAFUA,WAAYrD,EAEtB,EAFsBA,MAAOE,EAE7B,EAF6BA,WAAYb,EAEzC,EAFyCA,OAAQc,EAEjD,EAFiDA,YAChDb,EACD,EADCA,UAAWkF,EACZ,EADYA,eAAgBvE,EAC5B,EAD4BA,OAAQmD,EACpC,EADoCA,MAAOxD,EAC3C,EAD2CA,QAAS6E,EACpD,EADoDA,YAGnD,OACI,yBAAKpJ,UAAWkE,IAAEwC,SACd,yBAAK1G,UAAWkE,IAAEI,SACd,wBACItE,UAAWkE,IAAE9C,OAEZsF,EAAS,IACV,qCAAOsB,QAAP,IAAOA,OAAP,EAAOA,EAAYzG,mBAEtBgD,GACG,4CACiB,IACb,8BAAOC,YAAO,IAAIC,KAAKF,GAAU,wBAA+B,IAChE,kCAAQG,YAAoB,IAAID,KAAKF,IAArC,OAIZ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAMnD,MAAM,QAAQC,MAAOsD,IAC3B,kBAAC,EAAD,CAAMvD,MAAM,SAASC,MAAO2C,IAC5B,kBAAC,EAAD,CAAM5C,MAAM,YAAYC,MAAO4C,IAC/B,kBAAC,EAAD,CAAM7C,MAAM,SAASC,MAAOuD,IAE5B,kBAAC,EAAD,CAAMxD,MAAM,cAAcC,MAAOwD,IACjC,kBAAC,EAAD,CAAMzD,MAAM,eAAeC,MAAOyD,IAClC,kBAAC,EAAD,CAAM1D,MAAM,kBAAkBC,MAAO8H,IACrC,kBAAC,EAAD,CAAM/H,MAAM,QAAQC,MAAO0G,KAE/B,yBAAKhH,MAAO,CAAEsB,OAAQ,WACtB,kBAAC,EAAD,CAAOqE,QAAS0C,EAAYzC,kBCRzB0C,MA7Bf,YAA0C,IAAD,EAAblD,EAAa,EAAbA,UAAa,EAEJtE,YAAS,yBAA0B,IAA5DC,EAF6B,EAE7BA,QAASC,EAFoB,EAEpBA,KAAMC,EAFc,EAEdA,MAEvB,GAAIF,EACA,OACI,kBAACG,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAQ,KAER,kBAACC,EAAA,EAAD,OAKZ,GAAIN,EACA,OAAO,kBAACO,EAAA,EAAD,CAAOC,OAAO,SAASpB,MAAOY,IAGzC,IAAMsH,EAAkB,OAAGvH,QAAH,IAAGA,GAAH,UAAGA,EAAMwH,oBAAT,aAAG,EAAoB5C,cAEzCD,EAAUP,EAAUM,QAAO,qBAAGC,QACxBC,gBAAkB2C,KAE9B,OAAO,kBAAC,EAAD,iBAAa5C,EAAQ,GAArB,CAAyB0C,YAAaE,M,OCSlCE,MA/Bf,WAAsB,IAAD,EAEgB3H,YAAS,GAAD,OAAIL,EAAJ,uBAAkC,IAAnEM,EAFS,EAETA,QAASC,EAFA,EAEAA,KAAMC,EAFN,EAEMA,MAEvB,OAAIF,EAEI,kBAACG,EAAA,EAAD,CACIC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,OAAQ,KAER,kBAACC,EAAA,EAAD,OAKRN,EACO,kBAACO,EAAA,EAAD,CAAOC,OAAO,SAASpB,MAAOY,IAIrC,yBAAKhC,UAAU,aACX,kBAAC,EAAD,CAAkBmG,UAAWpE,IAC7B,yBAAKhB,MAAO,CAAEsB,OAAQ,WACtB,kBAAC,EAAD,CAAO8D,UAAWpE,IAClB,yBAAKhB,MAAO,CAAEsB,OAAQ,a,qBCtBnBpB,OATf,YAAyC,IAAxBjB,EAAuB,EAAvBA,UAAWkB,EAAY,EAAZA,SAElBuI,EAAUnI,IAAW4C,KAAEwF,MAAO1J,GAEpC,OACI,yBAAKA,UAAWyJ,GAAUvI,I,oBCOnByI,OAbf,YAA8C,IAA9BC,EAA6B,EAA7BA,MAAOxI,EAAsB,EAAtBA,MAAOyI,EAAe,EAAfA,YAE1B,OACI,yBAAK7J,UAAWkE,KAAE4F,MACd,yBAAK9J,UAAWkE,KAAE0F,OACd,yBAAK3J,IAAK2J,EAAO1J,IAAKkB,KAE1B,wBAAIpB,UAAWkE,KAAE9C,OAAQA,GACzB,uBAAGpB,UAAWkE,KAAE2F,aAAcA,K,kJCEpCE,GAAW,CACb,CACIC,GAAI,EACJJ,MAAOK,KACP7I,MAAO,aACPyI,YAAa,8GAEjB,CACIG,GAAI,EACJJ,MAAOM,KACP9I,MAAO,cACPyI,YAAa,8GAEjB,CACIG,GAAI,EACJJ,MAAOO,KACP/I,MAAO,YACPyI,YAAa,0HAEjB,CACIG,GAAI,EACJJ,MAAOQ,KACPhJ,MAAO,WACPyI,YAAa,qHAEjB,CACIG,GAAI,EACJJ,MAAOS,KACPjJ,MAAO,sBACPyI,YAAa,wHAEjB,CACIG,GAAI,EACJJ,MAAOU,KACPlJ,MAAO,WACPyI,YAAa,mIAiCNU,OA7Bf,WAEI,OACI,yBAAKvK,UAAU,aACX,yBACIA,UAAWkE,KAAEI,SAEb,wBACItE,UAAWkE,KAAE9C,OADjB,iCAKA,uBACIpB,UAAWkE,KAAE2F,aADjB,6KAQJ,kBAAC,GAAD,KACKE,GAASvJ,KAAI,SAACgK,GAAD,OACV,kBAAC,GAAD,eAAM/J,IAAK+J,EAAQR,IAAQQ,U,8BCtDhCC,OAhBf,WAEI,IAAMC,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,iBACAC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,kBAAC,KAAD,CAAQC,QAASN,EAAgBO,MAAO,IAAK5I,OAAQ,O,UCI9C6I,OAhBf,WAEI,IAAMR,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,iBACAC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,kBAAC,KAAD,CAAQC,QAASN,EAAgBO,MAAO,IAAK5I,OAAQ,O,UCI9C8I,OAhBf,WAEI,IAAMT,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,iBACAC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,kBAAC,KAAD,CAAQC,QAASN,EAAgBO,MAAO,IAAK5I,OAAQ,O,qBCH9CpB,OATf,YAAyC,IAAxBjB,EAAuB,EAAvBA,UAAWkB,EAAY,EAAZA,SAElBuI,EAAUnI,IAAW4C,KAAEwF,MAAO1J,GAEpC,OACI,yBAAKA,UAAWyJ,GAAUvI,I,oBCsBnByI,OA3Bf,YAA0D,IAA1C3J,EAAyC,EAAzCA,UAAWoL,EAA8B,EAA9BA,OAAQhK,EAAsB,EAAtBA,MAAOyI,EAAe,EAAfA,YAEhCJ,EAAUnI,IAAW4C,KAAE4F,KAAM9J,GAEnC,OACI,yBACIA,UAAWyJ,GAEX,yBACIzJ,UAAWkE,KAAEkH,QAEZA,GAEL,wBACIpL,UAAWkE,KAAE9C,OAEZA,GAEL,uBACIpB,UAAWkE,KAAE2F,aAEZA,K,UCLFwB,OAhBf,WAEI,IAAMX,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,iBACAC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,kBAAC,KAAD,CAAQC,QAASN,EAAgBO,MAAO,IAAK5I,OAAQ,O,UCI9CiJ,OAhBf,WAEI,IAAMZ,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,iBACAC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,kBAAC,KAAD,CAAQC,QAASN,EAAgBO,MAAO,IAAK5I,OAAQ,O,UCI9CkJ,OAhBf,WAEI,IAAMb,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,iBACAC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,kBAAC,KAAD,CAAQC,QAASN,EAAgBO,MAAO,IAAK5I,OAAQ,O,oBCFvDmJ,GAAU,CACZ,CACIxB,GAAI,EACJoB,OAAQ,kBAAC,GAAD,MACRhK,MAAO,kBACPyI,YAAa,6GAEjB,CACIG,GAAI,EACJoB,OAAQ,kBAAC,GAAD,MACRhK,MAAO,iBACPyI,YAAa,oHAEjB,CACIG,GAAI,EACJoB,OAAQ,kBAAC,GAAD,MACRhK,MAAO,sBACPyI,YAAa,+GAEjB,CACIG,GAAI,EACJoB,OAAQ,kBAAC,GAAD,MACRhK,MAAO,eACPyI,YAAa,0HAEjB,CACIG,GAAI,EACJoB,OAAQ,kBAAC,GAAD,MACRhK,MAAO,wBACPyI,YAAa,8HAEjB,CACIG,GAAI,EACJoB,OAAQ,kBAAC,GAAD,MACRhK,MAAO,sBACPyI,YAAa,kIAwBN4B,OApBf,WAEI,OACI,yBAAKzL,UAAU,aACX,yBAAKA,UAAWkE,KAAEI,SACd,wBAAItE,UAAWkE,KAAE9C,OAAjB,mCACA,uBAAGpB,UAAWkE,KAAE2F,aAAhB,iNAKJ,kBAAC,GAAD,KACK2B,GAAQhL,KAAI,SAACsJ,GAAD,OACT,kBAAC,GAAD,eAAMrJ,IAAKqJ,EAAKE,IAAQF,U,OCtB7B4B,OA/Bf,WAEI,OACI,kBAAC,IAAD,KACI,4BAAQ1L,UAAU,UACd,kBAAC,EAAD,OAEJ,0BAAMA,UAAU,QACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2L,KAAK,IAAIrL,OAAK,GACjB,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOqL,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOC,SAAO,GACV,kBAAC,EAAD,SAIZ,kBAAC,EAAD,Q,wCCXGC,G,oDA1BX,WAAYC,GAAQ,IAAD,+BACf,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFV,E,+DAUDhK,EAAOiK,GAGrBC,QAAQC,IAAR,UAAenK,EAAf,aAAyBiK,M,+BAIzB,OAAIG,KAAKL,MAAMC,SAEJ,+HAGJI,KAAKN,MAAM5K,Y,gDAjBUc,GAE5B,MAAO,CAAEgK,UAAU,O,GARCK,IAAMC,W,OCOlCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,QAGRC,SAASC,eAAe,S/BoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlL,GACLkK,QAAQlK,MAAMA,EAAMmL,a,mBgCxI5B5N,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,qBAAqB,MAAQ,uB,mBCArHD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,YAAc,4B,mBCAlHD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,oBAAoB,YAAc,4B,mBCApHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,YAAc,gC,mBCApGD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,YAAc,mC","file":"static/js/main.aabc7ed2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/corona-case-map.39b70ac5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"cards_cards__27-Xz\"};","module.exports = __webpack_public_path__ + \"static/media/1.29f0c08b.png\";","module.exports = __webpack_public_path__ + \"static/media/2.fcc81ec4.png\";","module.exports = __webpack_public_path__ + \"static/media/3.788f3b7a.png\";","module.exports = __webpack_public_path__ + \"static/media/4.d1394dbc.png\";","module.exports = __webpack_public_path__ + \"static/media/5.a049730f.png\";","module.exports = __webpack_public_path__ + \"static/media/6.298e6653.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"cards_cards__1lmHB\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nimport './Logo.scss';\r\n\r\nfunction Logo() {\r\n\r\n    return (\r\n        <a href=\"/\" className=\"logo\">\r\n            <img src=\"logo192.png\" alt=\"logo\" />\r\n            Corona Tracker\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Logo from '../Logo';\r\n\r\nimport './Navbar.scss';\r\n\r\nconst nav = [\r\n    { label: 'World', to: '/', exact: true },\r\n    { label: 'Countries', to: '/countries', exact: false },\r\n    { label: 'Symptoms', to: '/symptoms', exact: false },\r\n    { label: 'Prevention', to: '/prevention', exact: false },\r\n];\r\n\r\nfunction Navbar() {\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"container d-flex align-items-center justify-content-between\">\r\n                <Logo/>\r\n                <ul className=\"nav\">\r\n                    {nav.map(({ label, to, exact }) => (\r\n                        <li className=\"nav-item\" key={label}>\r\n                            <NavLink className=\"nav-link\" to={to} exact={exact}>{label}</NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nconst linkStyles = {\r\n    color: '#ccc',\r\n};\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                Copyright 2020 &nbsp; <a href=\"https://github.com/seryozhabaleyko/\" target=\"_blank\"\r\n                                         rel=\"noopener noreferrer\" style={linkStyles}>Seryozha Baleyko</a> &nbsp; |\r\n                Sumber data berasal dari\r\n                API &nbsp; <a href=\"https://disease.sh/\" target=\"_blank\" rel=\"noopener noreferrer\" style={linkStyles}>Novel\r\n                COVID API</a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './NotFound.scss';\r\n\r\nfunction NotFound() {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>NotFound</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nimport './Cards.scss';\r\n\r\nfunction Cards({ children }) {\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Card.scss';\r\n\r\nfunction StatCard({ title, value, className }) {\r\n\r\n    return (\r\n        <div className={classNames('card', className)}>\r\n            <h2 className=\"card-title\">{title}</h2>\r\n            <h1 className=\"card-value\">{value?.toLocaleString()}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatCard;","import axios from 'axios';\r\n\r\nexport const BASE_URL = 'https://covid19.mathdro.id/api';\r\nexport const COUNTRIES_URL = '/countries';\r\nexport const DAILY_URL = '/daily';\r\nexport const COUNTRY_DATA_URL = 'https://restcountries.eu/rest/v2/alpha';\r\n\r\nexport const baseUrl = 'https://disease.sh/v3';\r\n\r\nexport const allUrl = `${baseUrl}/covid-19/all`;\r\nexport const countriesUrl = `${baseUrl}/covid-19/countries`;\r\n\r\nexport default axios.create({ baseURL: 'https://disease.sh/v3' });","import React from 'react';\r\nimport useFetch from 'use-http';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Alert, Pane, Spinner } from 'evergreen-ui';\r\n\r\nimport s from './chart.module.scss';\r\n\r\nfunction Chart() {\r\n    const url = 'https://covid19.mathdro.id/api/daily';\r\n    const { loading, data, error } = useFetch(url, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Pane\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                height={400}\r\n            >\r\n                <Spinner/>\r\n            </Pane>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert intent=\"danger\" title={error}/>;\r\n    }\r\n\r\n    const dataLine = {\r\n        labels: data?.map(({ reportDate }) => reportDate),\r\n        datasets: [\r\n            {\r\n                label: 'confirmed',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.4)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data?.map(({ confirmed }) => confirmed.total),\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(244, 67, 54, 0.4)',\r\n                borderColor: 'rgba(244, 67, 54, 1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data?.map(({ deaths }) => deaths.total),\r\n            },\r\n            {\r\n                label: 'Recovered',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(76, 175, 80, 0.4)',\r\n                borderColor: 'rgba(76, 175, 80, 1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data?.map(({ recovered }) => recovered.total),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className={s.chart}>\r\n            <Line data={dataLine}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport useFetch from 'use-http';\r\nimport { Alert, Pane, Spinner } from 'evergreen-ui';\r\nimport { format, formatDistanceToNow } from 'date-fns';\r\n\r\nimport Cards from '../../components/Cards';\r\nimport Card from '../../components/Card';\r\nimport { baseUrl } from '../../utils/api';\r\n\r\nimport map from '../../assets/images/corona-case-map.png';\r\n\r\nimport s from './world.module.scss';\r\nimport Chart from './components/Chart';\r\n\r\nfunction World() {\r\n\r\n    const { loading, data, error } = useFetch(`${baseUrl}/covid-19/all`, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Pane\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                height={400}\r\n            >\r\n                <Spinner/>\r\n            </Pane>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert intent=\"danger\" title={error}/>;\r\n    }\r\n\r\n    return (\r\n        <section className={s.world}>\r\n            <div className=\"container\">\r\n                <header className={s.heading}>\r\n                    <h1 className={s.title}>World</h1>\r\n                    {data?.updated && (\r\n                        <div>\r\n                            Last update:{' '}\r\n                            <span>{format(new Date(data?.updated), 'MM/dd/yyyy @ hh:mma')}</span>{' '}\r\n                            <span>({formatDistanceToNow(new Date(data?.updated))})</span>\r\n                        </div>\r\n                    )}\r\n                </header>\r\n                <Cards>\r\n                    <Card title=\"Cases\" value={data?.cases}/>\r\n                    <Card title=\"Deaths\" value={data?.deaths}/>\r\n                    <Card title=\"Recovered\" value={data?.recovered}/>\r\n                    <Card title=\"Active\" value={data?.active}/>\r\n\r\n                    <Card title=\"Cases Today\" value={data?.todayCases}/>\r\n                    <Card title=\"Deaths Today\" value={data?.todayDeaths}/>\r\n                    <Card title=\"Critical\" value={data?.critical}/>\r\n                    <Card title=\"Affected Countries\" value={data?.affectedCountries}/>\r\n                </Cards>\r\n                <div className={s.cover}>\r\n                    <img src={map} alt=\"map\"/>\r\n                </div>\r\n                <Chart/>\r\n                <div style={{ height: '100px' }}/>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default World;","export const defaultErrorMessage = 'Сервер временно недоступен';\r\nexport const order = { asc: 'ascending', desc: 'descending' };","import { useMemo, useState } from 'react';\r\n\r\nimport { order } from '../constants';\r\n\r\nfunction useSortableData(items, config = null) {\r\n    const [sortConfig, setSortConfig] = useState(config);\r\n\r\n    const sortedItems = useMemo(() => {\r\n        let sortableItems = [...items];\r\n        if (sortConfig !== null) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === order.asc ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === order.asc ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [items, sortConfig]);\r\n\r\n    const requestSort = (key) => {\r\n        let direction = order.asc;\r\n        if (\r\n            sortConfig &&\r\n            sortConfig.key === key &&\r\n            sortConfig.direction === order.asc\r\n        ) {\r\n            direction = order.desc;\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    return { items: sortedItems, requestSort, sortConfig };\r\n}\r\n\r\nexport default useSortableData;","import React, { useState } from 'react';\r\nimport { Avatar, Table, Text, TextDropdownButton } from 'evergreen-ui';\r\n\r\nimport useSortableData from '../../hooks/useSortableData';\r\nimport { order } from '../../constants';\r\n\r\nconst tableHeadColumn = ['Cases', 'Deaths', 'Recovered', 'Active', 'Tests', 'Population'];\r\n\r\nfunction AdvancedTable({ countries }) {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const filter = (countries) => {\r\n        const searchQueryTrim = searchQuery.trim();\r\n\r\n        if (searchQueryTrim.length === 0) return countries;\r\n\r\n        return countries.filter(({ country }) =>\r\n            country.toLowerCase().includes(searchQueryTrim.toLowerCase()));\r\n    };\r\n\r\n    const { items, requestSort, sortConfig } = useSortableData(filter(countries));\r\n\r\n    const getIconForOrder = (currentOrder) => {\r\n        switch (currentOrder) {\r\n            case order.asc:\r\n                return 'arrow-up';\r\n            case order.desc:\r\n                return 'arrow-down';\r\n            default:\r\n                return 'double-caret-vertical';\r\n        }\r\n    };\r\n\r\n    const handleFilterChange = (value) => setSearchQuery(value);\r\n\r\n    const getClassNamesFor = (name) => {\r\n        if (!sortConfig) {\r\n            return;\r\n        }\r\n        return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    };\r\n\r\n    return (\r\n        <Table border>\r\n            <Table.Head height={50}>\r\n                <Table.SearchHeaderCell\r\n                    value={searchQuery}\r\n                    onChange={handleFilterChange}\r\n                    placeholder='Search by country...'\r\n                />\r\n                {tableHeadColumn.map((column) => (\r\n                    <Table.TextHeaderCell key={column}>\r\n                        <TextDropdownButton\r\n                            icon={getIconForOrder(getClassNamesFor(column.toLowerCase()))}\r\n                            onClick={() => requestSort(column.toLowerCase())}\r\n                        >\r\n                            {column}\r\n                        </TextDropdownButton>\r\n                    </Table.TextHeaderCell>\r\n                ))}\r\n            </Table.Head>\r\n            <Table.VirtualBody height={430}>\r\n                {items.map(({ country, countryInfo, cases, deaths, recovered, active, tests, population }) => (\r\n                    <Table.Row key={country} isSelectable onSelect={() => alert(country)}>\r\n                        <Table.Cell display=\"flex\" alignItems=\"center\">\r\n                            <Avatar src={countryInfo.flag} name={country}/>\r\n                            <Text marginLeft={8} size={300} fontWeight={500}>{country}</Text>\r\n                        </Table.Cell>\r\n                        <Table.TextCell isNumber>{cases?.toLocaleString()}</Table.TextCell>\r\n                        <Table.TextCell isNumber>{deaths?.toLocaleString()}</Table.TextCell>\r\n                        <Table.TextCell isNumber>{recovered?.toLocaleString()}</Table.TextCell>\r\n                        <Table.TextCell isNumber>{active?.toLocaleString()}</Table.TextCell>\r\n                        <Table.TextCell isNumber>{tests?.toLocaleString()}</Table.TextCell>\r\n                        <Table.TextCell isNumber>{population?.toLocaleString()}</Table.TextCell>\r\n                    </Table.Row>\r\n                ))}\r\n            </Table.VirtualBody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default AdvancedTable;","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport useFetch from 'use-http';\r\nimport { Alert, Pane, Spinner } from 'evergreen-ui';\r\nimport { format } from 'date-fns';\r\n\r\nfunction Chart({ country }) {\r\n\r\n    const url = `https://api.covid19api.com/country/${country}`;\r\n\r\n    const { loading, data, error } = useFetch(url, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Pane\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                height={400}\r\n            >\r\n                <Spinner/>\r\n            </Pane>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert intent=\"danger\" title={error}/>;\r\n    }\r\n\r\n    const dataLine = {\r\n        labels: data.map(({ Date: data }) => format(new Date(data), 'MM/dd/yyyy')),\r\n        datasets: [\r\n            {\r\n                label: 'Confirmed',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.4)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data.map(({ Confirmed: confirmed }) => confirmed),\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(244, 67, 54, 0.4)',\r\n                borderColor: 'rgba(244, 67, 54, 1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data.map(({ Deaths: deaths }) => deaths),\r\n            },\r\n            {\r\n                label: 'Recovered',\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(76, 175, 80, 0.4)',\r\n                borderColor: 'rgba(76, 175, 80, 1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data.map(({ Recovered: recovered }) => recovered),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Line data={dataLine}/>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport { format, formatDistanceToNow } from 'date-fns';\r\n\r\nimport Cards from '../Cards';\r\nimport Card from '../Card';\r\nimport Chart from '../../pages/Countries/components/Chart';\r\n\r\nimport s from './country.module.scss';\r\n\r\nfunction Country({\r\n    country, population, cases, todayCases, deaths, todayDeaths,\r\n    recovered, todayRecovered, active, tests, updated, countryName,\r\n}) {\r\n\r\n    return (\r\n        <div className={s.country}>\r\n            <div className={s.heading}>\r\n                <h1\r\n                    className={s.title}\r\n                >\r\n                    {country}{' '}\r\n                    <span>{population?.toLocaleString()}</span>\r\n                </h1>\r\n                {updated && (\r\n                    <div>\r\n                        Last update:{' '}\r\n                        <span>{format(new Date(updated), 'MM/dd/yyyy @ hh:mma')}</span>{' '}\r\n                        <span>({formatDistanceToNow(new Date(updated))})</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Cards>\r\n                <Card title=\"Cases\" value={cases}/>\r\n                <Card title=\"Deaths\" value={deaths}/>\r\n                <Card title=\"Recovered\" value={recovered}/>\r\n                <Card title=\"Active\" value={active}/>\r\n\r\n                <Card title=\"Cases Today\" value={todayCases}/>\r\n                <Card title=\"Deaths Today\" value={todayDeaths}/>\r\n                <Card title=\"Recovered Today\" value={todayRecovered}/>\r\n                <Card title=\"Tests\" value={tests}/>\r\n            </Cards>\r\n            <div style={{ height: '100px' }}/>\r\n            <Chart country={countryName.toLowerCase()}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport useFetch from 'use-http';\r\nimport { Alert, Pane, Spinner } from 'evergreen-ui';\r\n\r\nimport Country from '../components/Country';\r\n\r\nfunction CountryContainer({ countries }) {\r\n\r\n    const { loading, data, error } = useFetch('https://ipapi.co/json/', []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Pane\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                height={400}\r\n            >\r\n                <Spinner/>\r\n            </Pane>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert intent=\"danger\" title={error}/>;\r\n    }\r\n\r\n    const currentCountryName = data?.country_name?.toLowerCase();\r\n\r\n    const country = countries.filter(({ country }) =>\r\n        country.toLowerCase() === currentCountryName);\r\n\r\n    return <Country {...country[0]} countryName={currentCountryName}/>;\r\n}\r\n\r\nexport default CountryContainer;","import React from 'react';\r\nimport useFetch from 'use-http';\r\nimport { Alert, Pane, Spinner } from 'evergreen-ui';\r\n\r\nimport Table from '../../components/Table';\r\nimport { baseUrl } from '../../utils/api';\r\nimport CountryContainer from '../../containers/CountryContainer';\r\n\r\nimport './Countries.scss';\r\n\r\nfunction Countries() {\r\n\r\n    const { loading, data, error } = useFetch(`${baseUrl}/covid-19/countries`, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Pane\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                height={400}\r\n            >\r\n                <Spinner/>\r\n            </Pane>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert intent=\"danger\" title={error}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <CountryContainer countries={data}/>\r\n            <div style={{ height: '100px' }}/>\r\n            <Table countries={data}/>\r\n            <div style={{ height: '100px' }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Countries;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport s from './cards.module.scss';\r\n\r\nfunction Cards({ className, children }) {\r\n\r\n    const classes = classNames(s.cards, className);\r\n\r\n    return (\r\n        <div className={classes}>{children}</div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nimport s from './card.module.scss';\r\n\r\nfunction Card({ image, title, description }) {\r\n\r\n    return (\r\n        <div className={s.card}>\r\n            <div className={s.image}>\r\n                <img src={image} alt={title}/>\r\n            </div>\r\n            <h3 className={s.title}>{title}</h3>\r\n            <p className={s.description}>{description}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Cards from './components/Cards';\r\nimport Card from './components/Card';\r\n\r\nimport one from './1.png';\r\nimport two from './2.png';\r\nimport three from './3.png';\r\nimport four from './4.png';\r\nimport five from './5.png';\r\nimport six from './6.png';\r\n\r\nimport s from './symptoms.module.scss';\r\n\r\nconst symptoms = [\r\n    {\r\n        id: 1,\r\n        image: one,\r\n        title: 'High Fever',\r\n        description: 'According to the WHO, the most common symptoms of Covid-19 are fever. Fever is a key symptom, experts say.',\r\n    },\r\n    {\r\n        id: 2,\r\n        image: two,\r\n        title: 'Sore Throat',\r\n        description: 'A scratchy sensation in the throat, pain in the throat area that becomes worse when swallowing or talking.',\r\n    },\r\n    {\r\n        id: 3,\r\n        image: three,\r\n        title: 'Dry Cough',\r\n        description: 'Basically, a dry cough is \"one where no mucus or phlegm is produced with the cough, A cough that doesn’t go away.',\r\n    },\r\n    {\r\n        id: 4,\r\n        image: four,\r\n        title: 'Sneezing',\r\n        description: 'Sneezing is very common symptom in Coronavirus patient. Sneezing (sternutation) is the act of expelling a sudden.',\r\n    },\r\n    {\r\n        id: 5,\r\n        image: five,\r\n        title: 'Shortness of Breath',\r\n        description: 'Commonly known as tightening in the chest, air hunger, difficulty breathing, feeling of suffocation. These symptoms.',\r\n    },\r\n    {\r\n        id: 6,\r\n        image: six,\r\n        title: 'Vomiting',\r\n        description: 'It’s not a regular symptoms of coronavirus patients Symptoms that occur with nausea and vomiting include: abdominal pain.',\r\n    },\r\n];\r\n\r\nfunction Symptoms() {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div\r\n                className={s.heading}\r\n            >\r\n                <h1\r\n                    className={s.title}\r\n                >\r\n                    Coronavirus COVID-19 Symptoms\r\n                </h1>\r\n                <p\r\n                    className={s.description}\r\n                >\r\n                    The most common symptoms of COVID-19 are fever, tiredness, and dry cough. Some patients may have\r\n                    aches and pains, nasal congestion, runny nose, sore throat or diarrhea.\r\n                </p>\r\n            </div>\r\n\r\n            <Cards>\r\n                {symptoms.map((symptom) => (\r\n                    <Card key={symptom.id} {...symptom} />\r\n                ))}\r\n            </Cards>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Symptoms;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './lf30_Rq4Htd.json';\r\n\r\nfunction WashYourHandsLottie() {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Lottie options={defaultOptions} width={180} height={180}/>\r\n    );\r\n}\r\n\r\nexport default WashYourHandsLottie;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './lf30_oGbdoA.json';\r\n\r\nfunction WearFaceMaskLottie() {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Lottie options={defaultOptions} width={180} height={180}/>\r\n    );\r\n}\r\n\r\nexport default WearFaceMaskLottie;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './lf30_QLsD8M.json';\r\n\r\nfunction AvoidCloseContactLottie() {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Lottie options={defaultOptions} width={180} height={180}/>\r\n    );\r\n}\r\n\r\nexport default AvoidCloseContactLottie;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport s from './cards.module.scss';\r\n\r\nfunction Cards({ className, children }) {\r\n\r\n    const classes = classNames(s.cards, className);\r\n\r\n    return (\r\n        <div className={classes}>{children}</div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport s from './card.module.scss';\r\n\r\nfunction Card({ className, lottie, title, description }) {\r\n\r\n    const classes = classNames(s.card, className);\r\n\r\n    return (\r\n        <div\r\n            className={classes}\r\n        >\r\n            <div\r\n                className={s.lottie}\r\n            >\r\n                {lottie}\r\n            </div>\r\n            <h3\r\n                className={s.title}\r\n            >\r\n                {title}\r\n            </h3>\r\n            <p\r\n                className={s.description}\r\n            >\r\n                {description}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './lf20_qFttfS.json';\r\n\r\nfunction StayAtHomeLottie() {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Lottie options={defaultOptions} width={180} height={180}/>\r\n    );\r\n}\r\n\r\nexport default StayAtHomeLottie;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './lf30_yQtj4O.json';\r\n\r\nfunction UseSoapOrSanitizerLottie() {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Lottie options={defaultOptions} width={180} height={180}/>\r\n    );\r\n}\r\n\r\nexport default UseSoapOrSanitizerLottie;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from './lf20_qCBn5k.json';\r\n\r\nfunction KeepInformDoctorsLottie() {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Lottie options={defaultOptions} width={180} height={180}/>\r\n    );\r\n}\r\n\r\nexport default KeepInformDoctorsLottie;","import React from 'react';\r\n\r\nimport WashYourHandsLottie from '../../lotties/WashYourHandsLottie';\r\nimport WearFaceMaskLottie from '../../lotties/WearFaceMaskLottie';\r\nimport AvoidCloseContactLottie from '../../lotties/AvoidCloseContactLottie';\r\n\r\nimport Cards from './components/Cards';\r\nimport Card from './components/Card';\r\n\r\nimport StayAtHomeLottie from '../../lotties/StayAtHomeLottie';\r\nimport UseSoapOrSanitizerLottie from '../../lotties/UseSoapOrSanitizerLottie';\r\nimport KeepInformDoctorsLottie from '../../lotties/KeepInformDoctorsLottie';\r\n\r\nimport s from './prevention.module.scss';\r\n\r\nconst figures = [\r\n    {\r\n        id: 1,\r\n        lottie: <WashYourHandsLottie/>,\r\n        title: 'Wash Your Hands',\r\n        description: 'Wash your hands frequently and regularly with an alcohol based hand rub or wash them with soap and water.',\r\n    },\r\n    {\r\n        id: 2,\r\n        lottie: <WearFaceMaskLottie/>,\r\n        title: 'Wear Face Mask',\r\n        description: 'Wear sergical mask and avoid touching face. Hands touch many surfaces and can pick up viruses once contaminated.',\r\n    },\r\n    {\r\n        id: 3,\r\n        lottie: <AvoidCloseContactLottie/>,\r\n        title: 'Avoid Close Contact',\r\n        description: 'Please maintain at least 1 metre (3 feet) distance between yourself and anyone who is coughing or sneezing.',\r\n    },\r\n    {\r\n        id: 4,\r\n        lottie: <StayAtHomeLottie/>,\r\n        title: 'Stay at Home',\r\n        description: 'Stay home, stay safe. if you feel unwell. If you have a fever, cough and difficulty breathing, seek medical attention.',\r\n    },\r\n    {\r\n        id: 5,\r\n        lottie: <UseSoapOrSanitizerLottie/>,\r\n        title: 'Use Soap or Sanitizer',\r\n        description: 'Use alcohol based hand sanitizer or soap when you wash your hands. Keep wash yor hands at least 20 minute during handwash.',\r\n    },\r\n    {\r\n        id: 6,\r\n        lottie: <KeepInformDoctorsLottie/>,\r\n        title: 'Keep Inform Doctors',\r\n        description: 'If you are think you are suffering with this above symptoms. Please call a doctor as soon as posible for your medical advice.',\r\n    },\r\n];\r\n\r\nfunction Prevention() {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={s.heading}>\r\n                <h1 className={s.title}>Coronavirus COVID-19 Prevention</h1>\r\n                <p className={s.description}>You can protect yourself and help prevent spreading the coronavirus\r\n                    (COVID-19) to others if you do all the step shown as this infographics. You can safe from\r\n                    coronavirus and safe other if you are affected</p>\r\n            </div>\r\n\r\n            <Cards>\r\n                {figures.map((card) => (\r\n                    <Card key={card.id} {...card} />\r\n                ))}\r\n            </Cards>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Prevention;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport NotFound from './components/NotFound';\n\nimport World from './pages/World';\nimport Countries from './pages/Countries';\nimport Symptoms from './pages/Symptoms';\nimport Prevention from './pages/Prevention';\n\nimport './App.module.scss';\n\nfunction App() {\n\n    return (\n        <Router>\n            <header className=\"header\">\n                <Navbar/>\n            </header>\n            <main className=\"main\">\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <World/>\n                    </Route>\n                    <Route path=\"/countries\">\n                        <Countries/>\n                    </Route>\n                    <Route path=\"/symptoms\">\n                        <Symptoms/>\n                    </Route>\n                    <Route path=\"/prevention\">\n                        <Prevention/>\n                    </Route>\n                    <Route default>\n                        <NotFound/>\n                    </Route>\n                </Switch>\n            </main>\n            <Footer/>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n        // logErrorToMyService(error, errorInfo);\r\n        console.log(`${error}: ${errorInfo}`);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // Можно отрендерить запасной UI произвольного вида\r\n            return <h1>Что-то пошло не так.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport ErrorBoundary from './components/ErrorBoundary';\n\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ErrorBoundary>\n            <App/>\n        </ErrorBoundary>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"world\":\"world_world__1EV4c\",\"heading\":\"world_heading__3zOXu\",\"title\":\"world_title__2Tndx\",\"cover\":\"world_cover__1ZrJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__nAPZ_\",\"image\":\"card_image__1PizS\",\"title\":\"card_title__MkVhf\",\"description\":\"card_description__2xtQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1MeGA\",\"lottie\":\"card_lottie__1Hyrf\",\"title\":\"card_title__2ZFLz\",\"description\":\"card_description__39Cj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"country_heading__HV6KE\",\"title\":\"country_title__2fA5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"symptoms_heading__3udVD\",\"title\":\"symptoms_title__1aWyd\",\"description\":\"symptoms_description__NXG_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"prevention_heading__1hMrL\",\"title\":\"prevention_title__3xMi7\",\"description\":\"prevention_description__2VoFs\"};"],"sourceRoot":""}